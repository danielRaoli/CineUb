// <auto-generated />
using System;
using CineUb.API.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CineUb.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("CineUb.API.Core.Model.CineRoom", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("CineUb.API.Core.Model.CineSection", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CineRoomid")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("CineRoomid");

                    b.HasIndex("MovieId");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("CineUb.API.Core.Model.Movie", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Banner")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("CineUb.API.Core.Model.Ticket", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Sectionid")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("Sectionid");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("CineUb.API.Core.Model.CineSection", b =>
                {
                    b.HasOne("CineUb.API.Core.Model.CineRoom", null)
                        .WithMany("Sections")
                        .HasForeignKey("CineRoomid");

                    b.HasOne("CineUb.API.Core.Model.Movie", "Movie")
                        .WithMany("CineSections")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("CineUb.API.Core.Model.Ticket", b =>
                {
                    b.HasOne("CineUb.API.Core.Model.CineSection", "Section")
                        .WithMany()
                        .HasForeignKey("Sectionid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");
                });

            modelBuilder.Entity("CineUb.API.Core.Model.CineRoom", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("CineUb.API.Core.Model.Movie", b =>
                {
                    b.Navigation("CineSections");
                });
#pragma warning restore 612, 618
        }
    }
}
